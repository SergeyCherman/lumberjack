import { Inject, NgModule, Optional, SkipSelf } from '@angular/core';
import {
  LumberjackLogDriverConfig,
  lumberjackLogDriverConfigToken,
  lumberjackLogDriverToken,
} from '@ngworker/lumberjack';

import { ConsoleDriver } from '../log-drivers/console.driver';
import { consoleDriverConfigToken } from './console-driver-config.token';
import { ConsoleDriverConfig } from './console-driver.config';

export function consoleDriverFactory(
  logDriverConfig: LumberjackLogDriverConfig,
  consoleDriverConfig: ConsoleDriverConfig,
): ConsoleDriver {
  const baseConfig = { ...logDriverConfig, identifier: ConsoleDriver.driverIdentifier };
  const fullConfig = { ...baseConfig, ...consoleDriverConfig };

  return new ConsoleDriver(fullConfig);
}

@NgModule({
  providers: [
    {
      provide: lumberjackLogDriverToken,
      useFactory: consoleDriverFactory,
      deps: [lumberjackLogDriverConfigToken, consoleDriverConfigToken],
      multi: true,
    },
  ],
})
export class ConsoleDriverRootModule {
  constructor(
    @Optional()
    @SkipSelf()
    @Inject(ConsoleDriverRootModule)
    maybeNgModuleFromParentInjector: ConsoleDriverRootModule = null as any
  ) {
    if (maybeNgModuleFromParentInjector) {
      throw new Error(
        'ConsoleDriverModule.forRoot registered in multiple injectors. Only call it from your root injector such as in AppModule.'
      );
    }
  }
}
